{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/viet/Desktop/stage/yobeen agrotech app/src/scenes/Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment, useState } from 'react';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar countries = [\"Egypt\", \"Canada\", \"Australia\", \"Ireland\"];\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search() {\n    _classCallCheck(this, Search);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(SelectDropdown, {\n        data: countries,\n        defaultButtonText: \"Rechercher une station\",\n        onSelect: function onSelect(selectedItem, index) {\n          console.log(selectedItem, index);\n        },\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item;\n        },\n        renderDropdownIcon: function renderDropdownIcon() {\n          return React.createElement(Image, {\n            style: styles.img,\n            source: require(\"../images/rech.png\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 9\n            }\n          });\n        },\n        buttonStyle: styles.itemSearch,\n        buttonTextStyle: styles.TextInput,\n        dropdownStyle: styles.drop,\n        rowTextStyle: styles.rowText,\n        dropdownIconPosition: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 1\n        }\n      });\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };\nvar styles = StyleSheet.create({\n  rowText: {\n    fontSize: 19.73,\n    color: \"black\",\n    marginLeft: \"-60%\"\n  },\n  itemSearch: {\n    margin: 15,\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    backgroundColor: '#FFFFFF',\n    height: 48.259,\n    width: '90%',\n    borderRadius: 5.98,\n    flexDirection: 'row'\n  },\n  drop: {\n    marginTop: \"-6%\"\n  },\n  TextInput: {\n    fontSize: 19.73,\n    color: \"#BDBEC1\",\n    marginLeft: \"-23%\"\n  }\n});","map":{"version":3,"sources":["/Users/viet/Desktop/stage/yobeen agrotech app/src/scenes/Search.js"],"names":["React","Component","Fragment","useState","SelectDropdown","countries","Search","selectedItem","index","console","log","item","styles","img","require","itemSearch","TextInput","drop","rowText","StyleSheet","create","fontSize","color","marginLeft","margin","borderColor","borderWidth","backgroundColor","height","width","borderRadius","flexDirection","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,QAApC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;;;AAGA,IAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,WAApB,EAAiC,SAAjC,CAAlB;;IACqBC,M;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,aAEJ,oBAAC,cAAD;AACC,QAAA,IAAI,EAAED,SADP;AAEE,QAAA,iBAAiB,EAAC,wBAFpB;AAGC,QAAA,QAAQ,EAAE,kBAACE,YAAD,EAAeC,KAAf,EAAyB;AAClCC,UAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAA0BC,KAA1B;AACA,SALF;AAMC,QAAA,wBAAwB,EAAE,kCAACD,YAAD,EAAeC,KAAf,EAAyB;AAGlD,iBAAOD,YAAP;AACA,SAVF;AAWC,QAAA,mBAAmB,EAAE,6BAACI,IAAD,EAAOH,KAAP,EAAiB;AAGrC,iBAAOG,IAAP;AACA,SAfF;AAgBE,QAAA,kBAAkB,EAAE,8BAAM;AACxB,iBACI,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAEC,MAAM,CAACC,GAArB;AAA0B,YAAA,MAAM,EAAEC,OAAO,sBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAEF,SAnBF;AAoBE,QAAA,WAAW,EAAEF,MAAM,CAACG,UApBtB;AAqBE,QAAA,eAAe,EAAEH,MAAM,CAACI,SArB1B;AAsBE,QAAA,aAAa,EAAEJ,MAAM,CAACK,IAtBxB;AAuBE,QAAA,YAAY,EAAEL,MAAM,CAACM,OAvBvB;AAwBE,QAAA,oBAAoB,EAAE,OAxBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI;AA6BE;;;;EA/B8BlB,KAAK,CAACC,S;;SAArBK,M;AAgCjB,IAAMM,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,OAAO,EAAC;AACNG,IAAAA,QAAQ,EAAC,KADH;AAENC,IAAAA,KAAK,EAAC,OAFA;AAGNC,IAAAA,UAAU,EAAC;AAHL,GADuB;AAM/BR,EAAAA,UAAU,EAAE;AACVS,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,WAAW,EAAE,SAFH;AAGVC,IAAAA,WAAW,EAAE,CAHH;AAIVC,IAAAA,eAAe,EAAE,SAJP;AAMVC,IAAAA,MAAM,EAAC,MANG;AAOVC,IAAAA,KAAK,EAAC,KAPI;AAQVC,IAAAA,YAAY,EAAE,IARJ;AASVC,IAAAA,aAAa,EAAE;AATL,GANmB;AAiB/Bd,EAAAA,IAAI,EAAC;AACHe,IAAAA,SAAS,EAAC;AADP,GAjB0B;AAoB/BhB,EAAAA,SAAS,EAAC;AACRK,IAAAA,QAAQ,EAAC,KADD;AAERC,IAAAA,KAAK,EAAC,SAFE;AAGRC,IAAAA,UAAU,EAAC;AAHH;AApBqB,CAAlB,CAAf","sourcesContent":["import React, { Component, Fragment,useState   } from 'react';\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { View, Text,  StyleSheet, ScrollView, Image} from 'react-native';\r\n\r\nconst countries = [\"Egypt\", \"Canada\", \"Australia\", \"Ireland\"]\r\nexport default class Search extends React.Component { \r\n  render() {\r\n    return (\r\n      \r\n<SelectDropdown\r\n\tdata={countries}\r\n  defaultButtonText=\"Rechercher une station\"\r\n\tonSelect={(selectedItem, index) => {\r\n\t\tconsole.log(selectedItem, index)\r\n\t}}\r\n\tbuttonTextAfterSelection={(selectedItem, index) => {\r\n\t\t// text represented after item is selected\r\n\t\t// if data array is an array of objects then return selectedItem.property to render after item is selected\r\n\t\treturn selectedItem\r\n\t}}\r\n\trowTextForSelection={(item, index) => {\r\n\t\t// text represented for each item in dropdown\r\n\t\t// if data array is an array of objects then return item.property to represent item in dropdown\r\n\t\treturn item\r\n\t}}\r\n  renderDropdownIcon={() => {\r\n    return (\r\n        <Image style={styles.img} source={require('../images/rech.png')}/>    )\r\n }}\r\n  buttonStyle={styles.itemSearch}\r\n  buttonTextStyle={styles.TextInput}\r\n  dropdownStyle={styles.drop}\r\n  rowTextStyle={styles.rowText}\r\n  dropdownIconPosition={\"right\"}\r\n/>\r\n\r\n    )}}\r\n    const styles = StyleSheet.create({\r\n      rowText:{\r\n        fontSize:19.73,\r\n        color:\"black\",\r\n        marginLeft:\"-60%\",\r\n      },\r\n      itemSearch: {\r\n        margin: 15,\r\n        borderColor: '#FFFFFF',\r\n        borderWidth: 1,\r\n        backgroundColor: '#FFFFFF',\r\n        //width:393.094,\r\n        height:48.259 ,\r\n        width:'90%',\r\n        borderRadius: 5.98 ,\r\n        flexDirection: 'row'\r\n      },\r\n      drop:{\r\n        marginTop:\"-6%\"\r\n      },\r\n      TextInput:{\r\n        fontSize:19.73,\r\n        color:\"#BDBEC1\",\r\n        marginLeft:\"-23%\",\r\n        \r\n          }\r\n    })"]},"metadata":{},"sourceType":"module"}