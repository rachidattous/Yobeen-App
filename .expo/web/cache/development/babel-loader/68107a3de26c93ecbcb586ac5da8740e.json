{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { withNavigation } from 'react-navigation';\n\nvar HandleBack = function (_Component) {\n  _inherits(HandleBack, _Component);\n\n  var _super = _createSuper(HandleBack);\n\n  function HandleBack(props) {\n    var _this;\n\n    _classCallCheck(this, HandleBack);\n\n    _this = _super.call(this, props);\n\n    _this.onBack = function () {\n      return _this.props.onBack();\n    };\n\n    _this.didFocus = props.navigation.addListener('didFocus', function (payload) {\n      BackHandler.addEventListener('hardwareBackPress', _this.onBack);\n    });\n    return _this;\n  }\n\n  _createClass(HandleBack, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.willBlur = this.props.navigation.addListener('willBlur', function (payload) {\n        BackHandler.removeEventListener('hardwareBackPress', _this2.onBack);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.didFocus.remove();\n      this.willBlur.remove();\n      BackHandler.removeEventListener('hardwareBackPress', this.onBack);\n    }\n  }]);\n\n  return HandleBack;\n}(Component);","map":{"version":3,"sources":["/Users/viet/Desktop/stage/yobeen agrotech app/src/scenes/back.js"],"names":["React","Component","withNavigation","HandleBack","props","onBack","didFocus","navigation","addListener","payload","BackHandler","addEventListener","willBlur","removeEventListener","remove"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,cAAT,QAA+B,kBAA/B;;IAGMC,U;;;;;AACF,sBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAkBpBC,MAlBoB,GAkBX,YAAM;AACX,aAAO,MAAKD,KAAL,CAAWC,MAAX,EAAP;AACH,KApBmB;;AAGhB,UAAKC,QAAL,GACIF,KAAK,CAACG,UAAN,CAAiBC,WAAjB,CAA6B,UAA7B,EACA,UAAAC,OAAO,EAAI;AACPC,MAAAA,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkD,MAAKN,MAAvD;AACH,KAHD,CADJ;AAHgB;AAQnB;;;;WAED,6BAAoB;AAAA;;AAChB,WAAKO,QAAL,GACA,KAAKR,KAAL,CAAWG,UAAX,CAAsBC,WAAtB,CAAkC,UAAlC,EACA,UAAAC,OAAO,EAAI;AACPC,QAAAA,WAAW,CAACG,mBAAZ,CAAgC,mBAAhC,EAAoD,MAAI,CAACR,MAAzD;AACH,OAHD,CADA;AAKH;;;WAMD,gCAAuB;AACnB,WAAKC,QAAL,CAAcQ,MAAd;AACA,WAAKF,QAAL,CAAcE,MAAd;AACAJ,MAAAA,WAAW,CAACG,mBAAZ,CAAgC,mBAAhC,EAAoD,KAAKR,MAAzD;AACH;;;;EA3BoBJ,S","sourcesContent":["import React, { Component } from 'react' ;\nimport { View, Text, StyleSheet, BackHandler } from 'react-native';\nimport { withNavigation } from 'react-navigation';\n\n\nclass HandleBack extends Component {\n    constructor (props) {\n        super(props);\n\n        this.didFocus = \n            props.navigation.addListener('didFocus' , \n            payload => {\n                BackHandler.addEventListener('hardwareBackPress', this.onBack)\n            })\n    }\n\n    componentDidMount() {\n        this.willBlur = \n        this.props.navigation.addListener('willBlur' , \n        payload => {\n            BackHandler.removeEventListener('hardwareBackPress',this.onBack)\n        })\n    }\n\n    onBack = () => {\n        return this.props.onBack();\n    }\n\n    componentWillUnmount() {\n        this.didFocus.remove();\n        this.willBlur.remove();\n        BackHandler.removeEventListener('hardwareBackPress',this.onBack); \n    }\n}"]},"metadata":{},"sourceType":"module"}