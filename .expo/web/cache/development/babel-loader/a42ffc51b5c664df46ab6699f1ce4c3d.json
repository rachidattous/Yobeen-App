{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/viet/Desktop/stage/yobeen agrotech app/node_modules/react-native-select-dropdown/src/SelectDropdown.js\";\n\nimport React, { useEffect, useState, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SelectDropdown = function SelectDropdown(_ref, ref) {\n  var data = _ref.data,\n      onSelect = _ref.onSelect,\n      defaultButtonText = _ref.defaultButtonText,\n      buttonTextAfterSelection = _ref.buttonTextAfterSelection,\n      rowTextForSelection = _ref.rowTextForSelection,\n      defaultValueByIndex = _ref.defaultValueByIndex,\n      buttonStyle = _ref.buttonStyle,\n      buttonTextStyle = _ref.buttonTextStyle,\n      renderCustomizedButtonChild = _ref.renderCustomizedButtonChild,\n      renderDropdownIcon = _ref.renderDropdownIcon,\n      dropdownIconPosition = _ref.dropdownIconPosition,\n      statusBarTranslucent = _ref.statusBarTranslucent,\n      dropdownStyle = _ref.dropdownStyle,\n      rowStyle = _ref.rowStyle,\n      rowTextStyle = _ref.rowTextStyle,\n      renderCustomizedRowChild = _ref.renderCustomizedRowChild;\n  useImperativeHandle(ref, function () {\n    return {\n      reset: function reset() {\n        _reset();\n      },\n      openDropdown: function openDropdown() {\n        _openDropdown();\n      },\n      closeDropdown: function closeDropdown() {\n        _closeDropdown();\n      }\n    };\n  });\n  var DropdownButton = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dropdownPX = _useState4[0],\n      setDropdownPX = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dropdownPY = _useState6[0],\n      setDropdownPY = _useState6[1];\n\n  var _useState7 = useState(dropdownStyle && dropdownStyle.height ? dropdownStyle.height : 150),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dropdownHEIGHT = _useState8[0],\n      setDropdownHEIGHT = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dropdownWIDTH = _useState10[0],\n      setDropdownWIDTH = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedItem = _useState12[0],\n      setSelectedItem = _useState12[1];\n\n  var _useState13 = useState(-1),\n      _useState14 = _slicedToArray(_useState13, 2),\n      index = _useState14[0],\n      setIndex = _useState14[1];\n\n  var styles = StyleSheet.create({\n    dropdownButton: {\n      flexDirection: dropdownIconPosition == \"left\" ? \"row\" : \"row-reverse\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      backgroundColor: \"#EFEFEF\",\n      width: width / 2,\n      height: 50,\n      paddingHorizontal: 8,\n      overflow: \"hidden\"\n    },\n    dropdownButtonText: {\n      flex: 1,\n      fontSize: 18,\n      color: \"#000000\",\n      textAlign: \"center\",\n      marginHorizontal: 8\n    },\n    dropdownCustomizedButtonParent: {\n      flex: 1,\n      marginHorizontal: 8,\n      overflow: \"hidden\"\n    },\n    dropdownOverlay: {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.3)\"\n    },\n    dropdownOverlayView: {\n      backgroundColor: \"#EFEFEF\"\n    },\n    dropdownOverlayViewForce: {\n      position: \"absolute\",\n      top: dropdownPY,\n      height: dropdownHEIGHT,\n      width: dropdownWIDTH,\n      borderTopWidth: 0,\n      overflow: \"hidden\"\n    },\n    dropdownOverlayViewForceRTL: I18nManager.isRTL ? {\n      right: dropdownPX\n    } : {\n      left: dropdownPX\n    },\n    dropdownActivityIndicatorView: {\n      width: \"100%\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    dropdownRow: {\n      flex: 1,\n      height: 50,\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderBottomColor: \"#C5C5C5\",\n      borderBottomWidth: 1\n    },\n    dropdownRowText: {\n      flex: 1,\n      fontSize: 18,\n      color: \"#000000\",\n      textAlign: \"center\",\n      marginHorizontal: 8\n    },\n    dropdownCustomizedRowParent: {\n      flex: 1,\n      marginHorizontal: 8,\n      overflow: \"hidden\"\n    },\n    shadow: {\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 6\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 10,\n      elevation: 10\n    }\n  });\n  useEffect(function () {\n    if (data.length == 0) {\n      _reset();\n\n      if (defaultValueByIndex && data && data[defaultValueByIndex]) {\n        setDefault(defaultValueByIndex);\n      }\n    }\n  }, [data]);\n  useEffect(function () {\n    if (defaultValueByIndex != null && defaultValueByIndex != undefined && data && data[defaultValueByIndex]) {\n      setDefault(defaultValueByIndex);\n    }\n  }, [defaultValueByIndex]);\n  useEffect(function () {\n    if (dropdownStyle && dropdownStyle.height) {\n      setDropdownHEIGHT(dropdownStyle.height);\n    } else {\n      setDropdownHEIGHT(150);\n    }\n  }, [dropdownStyle]);\n\n  var _openDropdown = function _openDropdown() {\n    DropdownButton.current.measure(function (fx, fy, w, h, px, py) {\n      if (height - 18 < py + h + dropdownHEIGHT) {\n        setDropdownPX(px);\n        setDropdownPY(py - 2 - dropdownHEIGHT);\n        setDropdownWIDTH(w);\n      } else {\n        setDropdownPX(px);\n        setDropdownPY(py + h + 2);\n        setDropdownWIDTH(w);\n      }\n    });\n    setIsVisible(true);\n  };\n\n  var _closeDropdown = function _closeDropdown() {\n    setIsVisible(false);\n  };\n\n  var _reset = function _reset() {\n    setSelectedItem(null);\n    setIndex(-1);\n  };\n\n  var setDefault = function setDefault(index) {\n    setSelectedItem(data[index]);\n    setIndex(index);\n  };\n\n  var renderDropdown = function renderDropdown() {\n    return isVisible && React.createElement(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      statusBarTranslucent: statusBarTranslucent ? statusBarTranslucent : false,\n      visible: isVisible,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      activeOpacity: 1,\n      style: [styles.dropdownOverlay],\n      onPress: function onPress() {\n        return _closeDropdown();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: [styles.dropdownOverlayView, styles.shadow, dropdownStyle, styles.dropdownOverlayViewForce, styles.dropdownOverlayViewForceRTL],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, !data || data.length == 0 ? React.createElement(View, {\n      style: [styles.dropdownActivityIndicatorView],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"small\",\n      color: \"#999999\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    })) : React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, data.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index.toString(),\n        style: [styles.dropdownRow, rowStyle],\n        onPress: function onPress() {\n          _closeDropdown();\n\n          onSelect(item, index);\n          setSelectedItem(item);\n          setIndex(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, renderCustomizedRowChild ? React.createElement(View, {\n        style: [styles.dropdownCustomizedRowParent],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, renderCustomizedRowChild(rowTextForSelection ? rowTextForSelection(item, index) : item, index)) : React.createElement(Text, {\n        numberOfLines: 1,\n        allowFontScaling: false,\n        style: [styles.dropdownRowText, rowTextStyle],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, rowTextForSelection ? rowTextForSelection(item, index) : item));\n    }))));\n  };\n\n  return React.createElement(TouchableOpacity, {\n    ref: DropdownButton,\n    activeOpacity: 0.5,\n    style: [styles.dropdownButton, buttonStyle],\n    onPress: function onPress() {\n      return _openDropdown();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, renderDropdown(), renderDropdownIcon && renderDropdownIcon(), renderCustomizedButtonChild ? React.createElement(View, {\n    style: [styles.dropdownCustomizedButtonParent],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, renderCustomizedButtonChild(selectedItem ? buttonTextAfterSelection ? buttonTextAfterSelection(selectedItem, index) : selectedItem : defaultButtonText ? defaultButtonText : \"Select an option.\", index)) : React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: false,\n    style: [styles.dropdownButtonText, buttonTextStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, selectedItem ? buttonTextAfterSelection ? buttonTextAfterSelection(selectedItem, index) : selectedItem : defaultButtonText ? defaultButtonText : \"Select an option.\"));\n};\n\nexport default forwardRef(function (props, ref) {\n  return SelectDropdown(props, ref);\n});","map":{"version":3,"sources":["/Users/viet/Desktop/stage/yobeen agrotech app/node_modules/react-native-select-dropdown/src/SelectDropdown.js"],"names":["React","useEffect","useState","useRef","forwardRef","useImperativeHandle","Dimensions","get","width","height","SelectDropdown","ref","data","onSelect","defaultButtonText","buttonTextAfterSelection","rowTextForSelection","defaultValueByIndex","buttonStyle","buttonTextStyle","renderCustomizedButtonChild","renderDropdownIcon","dropdownIconPosition","statusBarTranslucent","dropdownStyle","rowStyle","rowTextStyle","renderCustomizedRowChild","reset","openDropdown","closeDropdown","DropdownButton","isVisible","setIsVisible","dropdownPX","setDropdownPX","dropdownPY","setDropdownPY","dropdownHEIGHT","setDropdownHEIGHT","dropdownWIDTH","setDropdownWIDTH","selectedItem","setSelectedItem","index","setIndex","styles","StyleSheet","create","dropdownButton","flexDirection","justifyContent","alignItems","backgroundColor","paddingHorizontal","overflow","dropdownButtonText","flex","fontSize","color","textAlign","marginHorizontal","dropdownCustomizedButtonParent","dropdownOverlay","dropdownOverlayView","dropdownOverlayViewForce","position","top","borderTopWidth","dropdownOverlayViewForceRTL","I18nManager","isRTL","right","left","dropdownActivityIndicatorView","dropdownRow","borderBottomColor","borderBottomWidth","dropdownRowText","dropdownCustomizedRowParent","shadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","length","setDefault","undefined","current","measure","fx","fy","w","h","px","py","renderDropdown","map","item","toString","props"],"mappings":"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","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  ActivityIndicator,\n  Modal,\n  I18nManager,\n} from \"react-native\";\nconst { width, height } = Dimensions.get(\"window\");\n\nconst SelectDropdown = (\n  {\n    data /* array */,\n    onSelect /* function  */,\n    defaultButtonText /* String */,\n    buttonTextAfterSelection /* function */,\n    rowTextForSelection /* function */,\n    defaultValueByIndex /* integer */,\n    /////////////////////////////\n    buttonStyle /* style object for button */,\n    buttonTextStyle /* style object for button text */,\n    renderCustomizedButtonChild /* function returns React component for customized button */,\n    /////////////////////////////\n    renderDropdownIcon,\n    dropdownIconPosition,\n    statusBarTranslucent,\n    dropdownStyle,\n    /////////////////////////////\n    rowStyle /* style object for row */,\n    rowTextStyle /* style object for row text */,\n    renderCustomizedRowChild /* function returns React component for customized row */,\n  },\n  ref\n) => {\n  ///////////////////////////////////////////////////////\n  useImperativeHandle(ref, () => ({\n    reset: () => {\n      reset();\n    },\n    openDropdown: () => {\n      openDropdown();\n    },\n    closeDropdown: () => {\n      closeDropdown();\n    },\n  }));\n  ///////////////////////////////////////////////////////\n  const DropdownButton = useRef(); // button ref to get positions\n  const [isVisible, setIsVisible] = useState(false); // dropdown visible ?\n  const [dropdownPX, setDropdownPX] = useState(0); // position x\n  const [dropdownPY, setDropdownPY] = useState(0); // position y\n  const [dropdownHEIGHT, setDropdownHEIGHT] = useState(\n    dropdownStyle && dropdownStyle.height ? dropdownStyle.height : 150\n  ); // dropdown height\n  const [dropdownWIDTH, setDropdownWIDTH] = useState(0); // dropdown width\n  ///////////////////////////////////////////////////////\n  const [selectedItem, setSelectedItem] = useState(null); // selected item from dropdown\n  const [index, setIndex] = useState(-1); // index of selected item from dropdown\n  ///////////////////////////////////////////////////////\n  /* ********************* Style ********************* */\n  const styles = StyleSheet.create({\n    dropdownButton: {\n      flexDirection: dropdownIconPosition == \"left\" ? \"row\" : \"row-reverse\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      backgroundColor: \"#EFEFEF\",\n      width: width / 2,\n      height: 50,\n      paddingHorizontal: 8,\n      overflow: \"hidden\",\n    },\n    dropdownButtonText: {\n      flex: 1,\n      fontSize: 18,\n      color: \"#000000\",\n      textAlign: \"center\",\n      marginHorizontal: 8,\n    },\n    dropdownCustomizedButtonParent: {\n      flex: 1,\n      marginHorizontal: 8,\n      overflow: \"hidden\",\n    },\n    //////////////////////////////////////\n    dropdownOverlay: {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.3)\",\n    },\n    dropdownOverlayView: {\n      backgroundColor: \"#EFEFEF\",\n    },\n    dropdownOverlayViewForce: {\n      position: \"absolute\",\n      top: dropdownPY,\n      height: dropdownHEIGHT,\n      width: dropdownWIDTH,\n      borderTopWidth: 0,\n      overflow: \"hidden\",\n    },\n    dropdownOverlayViewForceRTL: I18nManager.isRTL\n      ? { right: dropdownPX }\n      : { left: dropdownPX },\n    dropdownActivityIndicatorView: {\n      width: \"100%\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    //////////////////////////////////////\n    dropdownRow: {\n      flex: 1,\n      height: 50,\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderBottomColor: \"#C5C5C5\",\n      borderBottomWidth: 1,\n    },\n    dropdownRowText: {\n      flex: 1,\n      fontSize: 18,\n      color: \"#000000\",\n      textAlign: \"center\",\n      marginHorizontal: 8,\n    },\n    dropdownCustomizedRowParent: {\n      flex: 1,\n      marginHorizontal: 8,\n      overflow: \"hidden\",\n    },\n    //////////////////////////////////////\n    shadow: {\n      shadowColor: \"#000\",\n      shadowOffset: { width: 0, height: 6 },\n      shadowOpacity: 0.1,\n      shadowRadius: 10,\n      elevation: 10,\n    },\n  });\n  ///////////////////////////////////////////////////////\n  /* ******************* useEffect ******************* */\n  useEffect(() => {\n    // data array changes\n    if (data.length == 0) {\n      reset();\n      if (defaultValueByIndex && data && data[defaultValueByIndex]) {\n        setDefault(defaultValueByIndex);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    // default value by index added or changed\n    if (\n      defaultValueByIndex != null &&\n      defaultValueByIndex != undefined &&\n      data &&\n      data[defaultValueByIndex]\n    ) {\n      setDefault(defaultValueByIndex);\n    }\n  }, [defaultValueByIndex]);\n  useEffect(() => {\n    // for height changes\n    if (dropdownStyle && dropdownStyle.height) {\n      setDropdownHEIGHT(dropdownStyle.height);\n    } else {\n      setDropdownHEIGHT(150);\n    }\n  }, [dropdownStyle]);\n  ///////////////////////////////////////////////////////\n  /* ******************** Methods ******************** */\n  const openDropdown = () => {\n    DropdownButton.current.measure((fx, fy, w, h, px, py) => {\n      // console.log('position y => ', py, '\\nheight', h, '\\nposition x => ', px)\n      if (height - 18 < py + h + dropdownHEIGHT) {\n        setDropdownPX(px);\n        setDropdownPY(py - 2 - dropdownHEIGHT);\n        setDropdownWIDTH(w);\n      } else {\n        setDropdownPX(px);\n        setDropdownPY(py + h + 2);\n        setDropdownWIDTH(w);\n      }\n    });\n    setIsVisible(true);\n  };\n  const closeDropdown = () => {\n    setIsVisible(false);\n  };\n  const reset = () => {\n    setSelectedItem(null);\n    setIndex(-1);\n  };\n  const setDefault = (index) => {\n    setSelectedItem(data[index]);\n    setIndex(index);\n  };\n  ///////////////////////////////////////////////////////\n  const renderDropdown = () => {\n    return (\n      isVisible && (\n        <Modal\n          animationType=\"none\"\n          transparent={true}\n          statusBarTranslucent={\n            statusBarTranslucent ? statusBarTranslucent : false\n          }\n          visible={isVisible}\n          // style={[styles.dropdownOverlay]}\n        >\n          <TouchableOpacity\n            activeOpacity={1}\n            style={[styles.dropdownOverlay]}\n            onPress={() => closeDropdown()}\n          />\n          <View\n            style={[\n              styles.dropdownOverlayView,\n              styles.shadow,\n              dropdownStyle,\n              styles.dropdownOverlayViewForce,\n              styles.dropdownOverlayViewForceRTL,\n            ]}\n          >\n            {!data || data.length == 0 ? (\n              <View style={[styles.dropdownActivityIndicatorView]}>\n                <ActivityIndicator size=\"small\" color={\"#999999\"} />\n              </View>\n            ) : (\n              <ScrollView>\n                {data.map((item, index) => {\n                  return (\n                    <TouchableOpacity\n                      key={index.toString()}\n                      style={[styles.dropdownRow, rowStyle]}\n                      onPress={() => {\n                        closeDropdown();\n                        onSelect(item, index);\n                        setSelectedItem(item);\n                        setIndex(index);\n                      }}\n                    >\n                      {renderCustomizedRowChild ? (\n                        <View style={[styles.dropdownCustomizedRowParent]}>\n                          {renderCustomizedRowChild(\n                            rowTextForSelection\n                              ? rowTextForSelection(item, index)\n                              : item,\n                            index\n                          )}\n                        </View>\n                      ) : (\n                        <Text\n                          numberOfLines={1}\n                          allowFontScaling={false}\n                          style={[styles.dropdownRowText, rowTextStyle]}\n                        >\n                          {rowTextForSelection\n                            ? rowTextForSelection(item, index)\n                            : item}\n                        </Text>\n                      )}\n                    </TouchableOpacity>\n                  );\n                })}\n              </ScrollView>\n            )}\n          </View>\n        </Modal>\n      )\n    );\n  };\n  ///////////////////////////////////////////////////////\n  return (\n    <TouchableOpacity\n      ref={DropdownButton}\n      activeOpacity={0.5}\n      style={[styles.dropdownButton, buttonStyle]}\n      onPress={() => openDropdown()}\n    >\n      {renderDropdown()}\n      {renderDropdownIcon && renderDropdownIcon()}\n      {renderCustomizedButtonChild ? (\n        <View style={[styles.dropdownCustomizedButtonParent]}>\n          {renderCustomizedButtonChild(\n            selectedItem\n              ? buttonTextAfterSelection\n                ? buttonTextAfterSelection(selectedItem, index)\n                : selectedItem\n              : defaultButtonText\n              ? defaultButtonText\n              : \"Select an option.\",\n            index\n          )}\n        </View>\n      ) : (\n        <Text\n          numberOfLines={1}\n          allowFontScaling={false}\n          style={[styles.dropdownButtonText, buttonTextStyle]}\n        >\n          {selectedItem\n            ? buttonTextAfterSelection\n              ? buttonTextAfterSelection(selectedItem, index)\n              : selectedItem\n            : defaultButtonText\n            ? defaultButtonText\n            : \"Select an option.\"}\n        </Text>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nexport default forwardRef((props, ref) => SelectDropdown(props, ref));\n"]},"metadata":{},"sourceType":"module"}